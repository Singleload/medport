{"ast":null,"code":"import api from './api';\nconst checkoutService = {\n  /**\n   * Initiates the checkout process by sending customer and cart data to the backend\n   * @param {Object} checkoutData - Customer and cart data\n   * @returns {Promise} - Promise with payment initiation data\n   */\n  async initiateCheckout(checkoutData) {\n    try {\n      const response = await api.post('/api/checkout/initiate', checkoutData);\n      return response.data;\n    } catch (error) {\n      console.error('Checkout initiation error:', error);\n      throw error;\n    }\n  },\n  /**\n   * Processes the payment with Svea Ekonomi via our backend\n   * @param {Object} paymentData - Payment data including paymentId and payment details\n   * @returns {Promise} - Promise with payment result\n   */\n  async processPayment(paymentData) {\n    try {\n      const response = await api.post('/api/checkout/payment', paymentData);\n      return response.data;\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      throw error;\n    }\n  },\n  /**\n   * Verifies the payment status with the backend\n   * @param {string} paymentId - The payment ID to verify\n   * @returns {Promise} - Promise with payment status\n   */\n  async verifyPayment(paymentId) {\n    try {\n      const response = await api.get(`/api/checkout/verify/${paymentId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Payment verification error:', error);\n      throw error;\n    }\n  }\n};\nexport default checkoutService;","map":{"version":3,"names":["api","checkoutService","initiateCheckout","checkoutData","response","post","data","error","console","processPayment","paymentData","verifyPayment","paymentId","get"],"sources":["/home/dennis/medport/frontend/src/services/checkout.js"],"sourcesContent":["import api from './api';\n\nconst checkoutService = {\n  /**\n   * Initiates the checkout process by sending customer and cart data to the backend\n   * @param {Object} checkoutData - Customer and cart data\n   * @returns {Promise} - Promise with payment initiation data\n   */\n  async initiateCheckout(checkoutData) {\n    try {\n      const response = await api.post('/api/checkout/initiate', checkoutData);\n      return response.data;\n    } catch (error) {\n      console.error('Checkout initiation error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Processes the payment with Svea Ekonomi via our backend\n   * @param {Object} paymentData - Payment data including paymentId and payment details\n   * @returns {Promise} - Promise with payment result\n   */\n  async processPayment(paymentData) {\n    try {\n      const response = await api.post('/api/checkout/payment', paymentData);\n      return response.data;\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Verifies the payment status with the backend\n   * @param {string} paymentId - The payment ID to verify\n   * @returns {Promise} - Promise with payment status\n   */\n  async verifyPayment(paymentId) {\n    try {\n      const response = await api.get(`/api/checkout/verify/${paymentId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Payment verification error:', error);\n      throw error;\n    }\n  }\n};\n\nexport default checkoutService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,eAAe,GAAG;EACtB;AACF;AACA;AACA;AACA;EACE,MAAMC,gBAAgBA,CAACC,YAAY,EAAE;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,wBAAwB,EAAEF,YAAY,CAAC;MACvE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;EACE,MAAME,cAAcA,CAACC,WAAW,EAAE;IAChC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,uBAAuB,EAAEK,WAAW,CAAC;MACrE,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;EACE,MAAMI,aAAaA,CAACC,SAAS,EAAE;IAC7B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,GAAG,CAACa,GAAG,CAAC,wBAAwBD,SAAS,EAAE,CAAC;MACnE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}