{"ast":null,"code":"import { ref, computed, onMounted, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'CheckoutPage',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const customer = ref({\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      streetAddress: '',\n      postalCode: '',\n      city: '',\n      additionalInfo: ''\n    });\n    const checkoutError = ref(null);\n    const isLoading = computed(() => store.getters.isLoading);\n    const cartItems = computed(() => store.getters['cart/cartItems']);\n    const cartTotal = computed(() => store.getters['cart/cartTotal']);\n    const paymentStatus = computed(() => store.getters['checkout/paymentStatus']);\n    const bookingStatus = computed(() => store.getters['checkout/bookingStatus']);\n    const bookingId = computed(() => store.getters['checkout/bookingId']);\n    const checkoutComplete = computed(() => store.getters['checkout/isCheckoutComplete']);\n\n    // Load customer data from store if available\n    onMounted(() => {\n      const savedCustomer = store.getters['checkout/customer'];\n      if (savedCustomer.firstName) {\n        customer.value = {\n          ...savedCustomer\n        };\n      }\n\n      // Redirect to home if cart is empty\n      if (cartItems.value.length === 0 && !checkoutComplete.value) {\n        router.push('/');\n      }\n    });\n\n    // Watch for payment or booking errors\n    watch(() => store.getters['checkout/paymentError'], error => {\n      if (error) {\n        checkoutError.value = `Betalningsfel: ${error}`;\n      }\n    });\n    watch(() => store.getters['checkout/bookingError'], error => {\n      if (error) {\n        checkoutError.value = `Bokningsfel: ${error}`;\n      }\n    });\n    const formatPrice = price => {\n      return new Intl.NumberFormat('sv-SE').format(price);\n    };\n    const getItemPrice = item => {\n      const unitPrice = item.service.discountedPrice || item.service.price;\n      return unitPrice * item.quantity;\n    };\n    const submitCheckout = async () => {\n      try {\n        checkoutError.value = null;\n\n        // Save customer data to store\n        await store.dispatch('checkout/updateCustomer', customer.value);\n\n        // Initiate checkout\n        const checkoutResponse = await store.dispatch('checkout/initiateCheckout');\n\n        // Process payment with Svea Ekonomi\n        // In a real application, this would redirect to Svea's payment page\n        // For this implementation, we'll simulate a successful payment\n        await store.dispatch('checkout/processPayment', {\n          paymentMethod: 'card',\n          // This would normally come from Svea\n          paymentReference: checkoutResponse.paymentId\n        });\n\n        // At this point, the backend would create the booking after payment confirmation\n        // This is handled in the checkout store module's processPayment action\n\n        // Set document title\n        document.title = 'Beställning bekräftad - Svensk Hälsovård';\n      } catch (error) {\n        console.error('Checkout error:', error);\n        checkoutError.value = error.message || 'Ett fel uppstod vid beställningen. Försök igen senare.';\n      }\n    };\n    return {\n      customer,\n      cartItems,\n      cartTotal,\n      checkoutError,\n      isLoading,\n      paymentStatus,\n      bookingStatus,\n      bookingId,\n      checkoutComplete,\n      formatPrice,\n      getItemPrice,\n      submitCheckout\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","useStore","useRouter","name","setup","store","router","customer","firstName","lastName","email","phone","streetAddress","postalCode","city","additionalInfo","checkoutError","isLoading","getters","cartItems","cartTotal","paymentStatus","bookingStatus","bookingId","checkoutComplete","savedCustomer","value","length","push","error","formatPrice","price","Intl","NumberFormat","format","getItemPrice","item","unitPrice","service","discountedPrice","quantity","submitCheckout","dispatch","checkoutResponse","paymentMethod","paymentReference","paymentId","document","title","console","message"],"sources":["/home/dennis/medport/frontend/src/views/CheckoutPage.vue"],"sourcesContent":["<template>\n    <div class=\"checkout-page\">\n      <div class=\"container\">\n        <h1>Kassa</h1>\n  \n        <div v-if=\"cartItems.length === 0\" class=\"empty-checkout\">\n          <div class=\"icon\">\n            <i class=\"fas fa-shopping-cart\"></i>\n          </div>\n          <h2>Din kundvagn är tom</h2>\n          <p>Du behöver lägga till artiklar i din kundvagn innan du kan gå till kassan.</p>\n          <router-link to=\"/\" class=\"btn btn-primary\">Tillbaka till butiken</router-link>\n        </div>\n  \n        <div v-else-if=\"checkoutComplete\" class=\"checkout-success\">\n          <div class=\"success-icon\">\n            <i class=\"fas fa-check-circle\"></i>\n          </div>\n          <h2>Tack för din beställning!</h2>\n          <p>Din order har mottagits och behandlas nu.</p>\n          <p>Orderbekräftelse har skickats till din e-post.</p>\n          <div class=\"order-details\">\n            <p><strong>Ordernummer:</strong> {{ bookingId }}</p>\n          </div>\n          <router-link to=\"/\" class=\"btn btn-primary\">Tillbaka till butiken</router-link>\n        </div>\n  \n        <div v-else class=\"checkout-content\">\n          <div class=\"checkout-form-section\">\n            <h2>Dina uppgifter</h2>\n  \n            <form @submit.prevent=\"submitCheckout\" class=\"checkout-form\">\n              <div class=\"form-row\">\n                <div class=\"form-group\">\n                  <label for=\"firstName\">Förnamn *</label>\n                  <input \n                    type=\"text\" \n                    id=\"firstName\" \n                    v-model=\"customer.firstName\" \n                    class=\"form-control\" \n                    required\n                  >\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"lastName\">Efternamn *</label>\n                  <input \n                    type=\"text\" \n                    id=\"lastName\" \n                    v-model=\"customer.lastName\" \n                    class=\"form-control\" \n                    required\n                  >\n                </div>\n              </div>\n  \n              <div class=\"form-group\">\n                <label for=\"email\">E-post *</label>\n                <input \n                  type=\"email\" \n                  id=\"email\" \n                  v-model=\"customer.email\" \n                  class=\"form-control\" \n                  required\n                >\n              </div>\n  \n              <div class=\"form-group\">\n                <label for=\"phone\">Telefon *</label>\n                <input \n                  type=\"tel\" \n                  id=\"phone\" \n                  v-model=\"customer.phone\" \n                  class=\"form-control\" \n                  required\n                >\n              </div>\n  \n              <div class=\"form-group\">\n                <label for=\"streetAddress\">Gatuadress *</label>\n                <input \n                  type=\"text\" \n                  id=\"streetAddress\" \n                  v-model=\"customer.streetAddress\" \n                  class=\"form-control\" \n                  required\n                >\n              </div>\n  \n              <div class=\"form-row\">\n                <div class=\"form-group\">\n                  <label for=\"postalCode\">Postnummer *</label>\n                  <input \n                    type=\"text\" \n                    id=\"postalCode\" \n                    v-model=\"customer.postalCode\" \n                    class=\"form-control\" \n                    required\n                  >\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"city\">Ort *</label>\n                  <input \n                    type=\"text\" \n                    id=\"city\" \n                    v-model=\"customer.city\" \n                    class=\"form-control\" \n                    required\n                  >\n                </div>\n              </div>\n  \n              <div class=\"form-group\">\n                <label for=\"additionalInfo\">Ytterligare information (valfritt)</label>\n                <textarea \n                  id=\"additionalInfo\" \n                  v-model=\"customer.additionalInfo\" \n                  class=\"form-control\"\n                  rows=\"3\"\n                ></textarea>\n              </div>\n  \n              <div class=\"form-group payment-selection\">\n                <h3>Betalningsmetod</h3>\n                <p>All betalning hanteras säkert via Svea Ekonomi.</p>\n                <div class=\"payment-logos\">\n                  <span>Svea Ekonomi</span>\n                </div>\n              </div>\n  \n              <div v-if=\"checkoutError\" class=\"alert alert-danger\">\n                {{ checkoutError }}\n              </div>\n  \n              <div class=\"form-actions\">\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isLoading\">\n                  <span v-if=\"isLoading\">\n                    <i class=\"fas fa-spinner fa-spin\"></i> Bearbetar...\n                  </span>\n                  <span v-else>\n                    Slutför beställning\n                  </span>\n                </button>\n              </div>\n            </form>\n          </div>\n  \n          <div class=\"checkout-summary\">\n            <h2>Ordersammanfattning</h2>\n            \n            <div class=\"summary-content\">\n              <div class=\"summary-items\">\n                <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"summary-item\">\n                  <div class=\"item-info\">\n                    <h4>{{ item.service.name }}</h4>\n                    <p>{{ item.purchaseType === 'subscription' ? 'Prenumeration' : 'Engångsköp' }}</p>\n                    <p v-if=\"item.quantity > 1\">{{ item.quantity }} st</p>\n                  </div>\n                  <div class=\"item-price\">\n                    {{ formatPrice(getItemPrice(item)) }} kr\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"summary-totals\">\n                <div class=\"summary-row\">\n                  <span>Delsumma</span>\n                  <span>{{ formatPrice(cartTotal) }} kr</span>\n                </div>\n                \n                <div class=\"summary-row\">\n                  <span>Leverans</span>\n                  <span>Ingår</span>\n                </div>\n                \n                <div class=\"summary-row total\">\n                  <span>Totalt</span>\n                  <span>{{ formatPrice(cartTotal) }} kr</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, computed, onMounted, watch } from 'vue';\n  import { useStore } from 'vuex';\n  import { useRouter } from 'vue-router';\n  \n  export default {\n    name: 'CheckoutPage',\n    setup() {\n      const store = useStore();\n      const router = useRouter();\n      \n      const customer = ref({\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        streetAddress: '',\n        postalCode: '',\n        city: '',\n        additionalInfo: ''\n      });\n      \n      const checkoutError = ref(null);\n      const isLoading = computed(() => store.getters.isLoading);\n      const cartItems = computed(() => store.getters['cart/cartItems']);\n      const cartTotal = computed(() => store.getters['cart/cartTotal']);\n      const paymentStatus = computed(() => store.getters['checkout/paymentStatus']);\n      const bookingStatus = computed(() => store.getters['checkout/bookingStatus']);\n      const bookingId = computed(() => store.getters['checkout/bookingId']);\n      const checkoutComplete = computed(() => store.getters['checkout/isCheckoutComplete']);\n      \n      // Load customer data from store if available\n      onMounted(() => {\n        const savedCustomer = store.getters['checkout/customer'];\n        if (savedCustomer.firstName) {\n          customer.value = { ...savedCustomer };\n        }\n        \n        // Redirect to home if cart is empty\n        if (cartItems.value.length === 0 && !checkoutComplete.value) {\n          router.push('/');\n        }\n      });\n      \n      // Watch for payment or booking errors\n      watch(() => store.getters['checkout/paymentError'], (error) => {\n        if (error) {\n          checkoutError.value = `Betalningsfel: ${error}`;\n        }\n      });\n      \n      watch(() => store.getters['checkout/bookingError'], (error) => {\n        if (error) {\n          checkoutError.value = `Bokningsfel: ${error}`;\n        }\n      });\n      \n      const formatPrice = (price) => {\n        return new Intl.NumberFormat('sv-SE').format(price);\n      };\n      \n      const getItemPrice = (item) => {\n        const unitPrice = item.service.discountedPrice || item.service.price;\n        return unitPrice * item.quantity;\n      };\n      \n      const submitCheckout = async () => {\n        try {\n          checkoutError.value = null;\n          \n          // Save customer data to store\n          await store.dispatch('checkout/updateCustomer', customer.value);\n          \n          // Initiate checkout\n          const checkoutResponse = await store.dispatch('checkout/initiateCheckout');\n          \n          // Process payment with Svea Ekonomi\n          // In a real application, this would redirect to Svea's payment page\n          // For this implementation, we'll simulate a successful payment\n          await store.dispatch('checkout/processPayment', {\n            paymentMethod: 'card', // This would normally come from Svea\n            paymentReference: checkoutResponse.paymentId\n          });\n          \n          // At this point, the backend would create the booking after payment confirmation\n          // This is handled in the checkout store module's processPayment action\n          \n          // Set document title\n          document.title = 'Beställning bekräftad - Svensk Hälsovård';\n          \n        } catch (error) {\n          console.error('Checkout error:', error);\n          checkoutError.value = error.message || 'Ett fel uppstod vid beställningen. Försök igen senare.';\n        }\n      };\n      \n      return {\n        customer,\n        cartItems,\n        cartTotal,\n        checkoutError,\n        isLoading,\n        paymentStatus,\n        bookingStatus,\n        bookingId,\n        checkoutComplete,\n        formatPrice,\n        getItemPrice,\n        submitCheckout\n      };\n    }\n  };\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  .checkout-page {\n    padding: 2rem 0;\n    \n    h1 {\n      margin-bottom: 2rem;\n      color: $primary;\n    }\n    \n    .empty-checkout, .checkout-success {\n      text-align: center;\n      padding: 3rem 0;\n      \n      .icon, .success-icon {\n        font-size: 4rem;\n        margin-bottom: 1.5rem;\n      }\n      \n      .icon {\n        color: #dee2e6;\n      }\n      \n      .success-icon {\n        color: $success;\n      }\n      \n      h2 {\n        margin-bottom: 1rem;\n      }\n      \n      p {\n        margin-bottom: 0.5rem;\n        color: #6c757d;\n      }\n      \n      .order-details {\n        margin: 2rem 0;\n        padding: 1.5rem;\n        background-color: #f8f9fa;\n        border-radius: $border-radius;\n        display: inline-block;\n        \n        p {\n          margin: 0;\n        }\n      }\n      \n      .btn {\n        margin-top: 1.5rem;\n      }\n    }\n    \n    .checkout-content {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 2rem;\n      \n      .checkout-form-section {\n        flex: 0 0 100%;\n        max-width: 100%;\n        \n        @media (min-width: $breakpoint-lg) {\n          flex: 0 0 calc(60% - 1rem);\n          max-width: calc(60% - 1rem);\n        }\n        \n        h2 {\n          margin-bottom: 1.5rem;\n          color: $primary;\n          font-size: 1.5rem;\n        }\n        \n        .checkout-form {\n          background-color: white;\n          border-radius: $border-radius;\n          box-shadow: $box-shadow-sm;\n          padding: 1.5rem;\n          \n          .form-row {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 1rem;\n            \n            .form-group {\n              flex: 1;\n              min-width: 0;\n            }\n          }\n          \n          .form-group {\n            margin-bottom: 1.5rem;\n            \n            label {\n              display: block;\n              margin-bottom: 0.5rem;\n              font-weight: 500;\n            }\n            \n            .form-control {\n              width: 100%;\n              padding: 0.75rem;\n              border: 1px solid #dee2e6;\n              border-radius: $border-radius-sm;\n              transition: $transition-base;\n              \n              &:focus {\n                border-color: $primary;\n                box-shadow: 0 0 0 0.2rem rgba($primary, 0.25);\n                outline: none;\n              }\n            }\n          }\n          \n          .payment-selection {\n            margin-top: 2rem;\n            \n            h3 {\n              margin-bottom: 0.5rem;\n              font-size: 1.25rem;\n            }\n            \n            .payment-logos {\n              display: flex;\n              align-items: center;\n              margin-top: 1rem;\n              \n              span {\n                padding: 0.5rem 1rem;\n                border: 1px solid #dee2e6;\n                border-radius: $border-radius-sm;\n                font-weight: 500;\n              }\n            }\n          }\n          \n          .alert {\n            margin-bottom: 1.5rem;\n          }\n          \n          .form-actions {\n            .btn {\n              width: 100%;\n              padding: 0.75rem;\n              font-size: 1.1rem;\n            }\n          }\n        }\n      }\n      \n      .checkout-summary {\n        flex: 0 0 100%;\n        max-width: 100%;\n        \n        @media (min-width: $breakpoint-lg) {\n          flex: 0 0 calc(40% - 1rem);\n          max-width: calc(40% - 1rem);\n        }\n        \n        h2 {\n          margin-bottom: 1.5rem;\n          color: $primary;\n          font-size: 1.5rem;\n        }\n        \n        .summary-content {\n          background-color: white;\n          border-radius: $border-radius;\n          box-shadow: $box-shadow-sm;\n          padding: 1.5rem;\n          \n          .summary-items {\n            .summary-item {\n              display: flex;\n              justify-content: space-between;\n              padding: 0.75rem 0;\n              border-bottom: 1px solid #f2f2f2;\n              \n              .item-info {\n                flex: 1;\n                min-width: 0;\n                \n                h4 {\n                  margin: 0 0 0.25rem;\n                  font-size: 1rem;\n                }\n                \n                p {\n                  margin: 0;\n                  color: #6c757d;\n                  font-size: 0.9rem;\n                }\n              }\n              \n              .item-price {\n                font-weight: 500;\n                margin-left: 1rem;\n              }\n            }\n          }\n          \n          .summary-totals {\n            margin-top: 1.5rem;\n            \n            .summary-row {\n              display: flex;\n              justify-content: space-between;\n              padding: 0.75rem 0;\n              \n              &:not(:last-child) {\n                border-bottom: 1px solid #f2f2f2;\n              }\n              \n              &.total {\n                font-weight: bold;\n                font-size: 1.2rem;\n                margin-top: 0.5rem;\n                color: $primary;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}