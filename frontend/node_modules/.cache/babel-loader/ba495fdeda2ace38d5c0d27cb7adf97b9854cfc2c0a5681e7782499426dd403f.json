{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || '/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 30000 // 30 seconds\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Set loading state\n  store.dispatch('setLoading', true);\n  // Clear previous errors\n  store.dispatch('clearError');\n  return config;\n}, error => {\n  store.dispatch('setLoading', false);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  store.dispatch('setLoading', false);\n  return response;\n}, error => {\n  store.dispatch('setLoading', false);\n\n  // Handle specific error cases\n  if (error.response) {\n    // Server responded with a status code that falls out of the range of 2xx\n    const {\n      status,\n      data\n    } = error.response;\n    switch (status) {\n      case 400:\n        store.dispatch('setError', {\n          code: 'BAD_REQUEST',\n          message: data.message || 'Ogiltig förfrågan'\n        });\n        break;\n      case 401:\n        store.dispatch('setError', {\n          code: 'UNAUTHORIZED',\n          message: 'Obehörig åtkomst'\n        });\n        break;\n      case 404:\n        store.dispatch('setError', {\n          code: 'NOT_FOUND',\n          message: 'Resursen kunde inte hittas'\n        });\n        break;\n      case 422:\n        store.dispatch('setError', {\n          code: 'VALIDATION_ERROR',\n          message: data.message || 'Valideringsfel',\n          errors: data.errors\n        });\n        break;\n      case 500:\n        store.dispatch('setError', {\n          code: 'SERVER_ERROR',\n          message: 'Ett serverfel inträffade'\n        });\n        break;\n      default:\n        store.dispatch('setError', {\n          code: 'UNKNOWN_ERROR',\n          message: 'Ett okänt fel inträffade'\n        });\n    }\n  } else if (error.request) {\n    // The request was made but no response was received\n    store.dispatch('setError', {\n      code: 'NETWORK_ERROR',\n      message: 'Kunde inte ansluta till servern. Kontrollera din internetanslutning.'\n    });\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    store.dispatch('setError', {\n      code: 'REQUEST_ERROR',\n      message: error.message || 'Ett fel uppstod vid förfrågan'\n    });\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","store","api","create","baseURL","process","env","VUE_APP_API_URL","headers","timeout","interceptors","request","use","config","dispatch","error","Promise","reject","response","status","data","code","message","errors"],"sources":["/home/dennis/medport/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport store from '@/store';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || '/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 30000 // 30 seconds\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  config => {\n    // Set loading state\n    store.dispatch('setLoading', true);\n    // Clear previous errors\n    store.dispatch('clearError');\n    return config;\n  },\n  error => {\n    store.dispatch('setLoading', false);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  response => {\n    store.dispatch('setLoading', false);\n    return response;\n  },\n  error => {\n    store.dispatch('setLoading', false);\n    \n    // Handle specific error cases\n    if (error.response) {\n      // Server responded with a status code that falls out of the range of 2xx\n      const { status, data } = error.response;\n      \n      switch (status) {\n        case 400:\n          store.dispatch('setError', {\n            code: 'BAD_REQUEST',\n            message: data.message || 'Ogiltig förfrågan'\n          });\n          break;\n        case 401:\n          store.dispatch('setError', {\n            code: 'UNAUTHORIZED',\n            message: 'Obehörig åtkomst'\n          });\n          break;\n        case 404:\n          store.dispatch('setError', {\n            code: 'NOT_FOUND',\n            message: 'Resursen kunde inte hittas'\n          });\n          break;\n        case 422:\n          store.dispatch('setError', {\n            code: 'VALIDATION_ERROR',\n            message: data.message || 'Valideringsfel',\n            errors: data.errors\n          });\n          break;\n        case 500:\n          store.dispatch('setError', {\n            code: 'SERVER_ERROR',\n            message: 'Ett serverfel inträffade'\n          });\n          break;\n        default:\n          store.dispatch('setError', {\n            code: 'UNKNOWN_ERROR',\n            message: 'Ett okänt fel inträffade'\n          });\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      store.dispatch('setError', {\n        code: 'NETWORK_ERROR',\n        message: 'Kunde inte ansluta till servern. Kontrollera din internetanslutning.'\n      });\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      store.dispatch('setError', {\n        code: 'REQUEST_ERROR',\n        message: error.message || 'Ett fel uppstod vid förfrågan'\n      });\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}